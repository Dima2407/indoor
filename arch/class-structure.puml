@startuml

package Android <<Rectangle>>{
    package android.bluetooth{
        class BluetoothAdapter
    }
    package android.location{
        class LocationManager
    }
    package android.hardware{
        class SensorManager
    }
    package android.net.wifi{
        class WifiManager
    }
}

package com.jim-it.traking.events{
class MeasurementEvent{
-timestamp : int
-type: MeasurementType
-values : float []
}
enum MeasurementType {
GEO_VALUE
SENSOR_VALUE
WIFI_VALUE
BLE_VALUE

}

MeasurementEvent *-- MeasurementType
}

package com.jim-it.traking.configs{

class BeaconConfig {
-txPower: double
-damp: double
-hash: long
-macAddress: String
-position: float[]
}

+abstract class ProviderConfiguration<TConfig>{
+<size 20>updateConfiguration(TConfig[]) : void</size>
}

class BluetoothProviderConfiguration{

}
ProviderConfiguration <|-- BluetoothProviderConfiguration
BluetoothProviderConfiguration o-- BeaconConfig
}


package com.jim-it.traking{
class IndoorLocationManager {
-providers : List<MeasurementProvider>
-locationListener : IndoorLocationListener
+addProvider(provider : MeasurementProvider) :
+prepare() : void
+start() : void
+stop() : void
+release() : void
}
interface IndoorLocationListener{
+onLocation(coordinate: float []): void
}

}

package com.jim-it.traking.providers {

+abstract class MeasurementProvider{
+{abstract}start() : void
+{abstract}stop() : void
}

class MeasurementTransfer {
+{abstract}<size 20>deliver(event : MeasurementEvent) : void </size>
}


~class BluetoothMeasurementProvider{
}

~class GPSMeasurementProvider{
}

~class SensorMeasurementProvider{
}

~class WIFIMeasurementProvider{
}

MeasurementProvider *-- MeasurementTransfer
MeasurementProvider *-- ProviderConfiguration

MeasurementProvider <|-- BluetoothMeasurementProvider
BluetoothMeasurementProvider *-- BluetoothAdapter

MeasurementProvider <|-- GPSMeasurementProvider
GPSMeasurementProvider *-- LocationManager

MeasurementProvider <|-- SensorMeasurementProvider
SensorMeasurementProvider *-- SensorManager

MeasurementProvider <|-- WIFIMeasurementProvider
WIFIMeasurementProvider *-- WifiManager
}

@enduml